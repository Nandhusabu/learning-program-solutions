interface PaymentStrategy {
    void pay(int amount);
}

class CreditCardPayment implements PaymentStrategy {
    private String cardNumber;

    public CreditCardPayment(String cardNumber) {
        this.cardNumber = cardNumber;
    }

    public void pay(int amount) {
        System.out.println("Paid ₹" + amount + " using Credit Card. Card No: " + cardNumber);
    }
}

class PayPalPayment implements PaymentStrategy {
    private String email;

    public PayPalPayment(String email) {
        this.email = email;
    }

    public void pay(int amount) {
        System.out.println("Paid ₹" + amount + " using PayPal. Email: " + email);
    }
}

class PaymentContext {
    private PaymentStrategy method;

    public void choseMethod(PaymentStrategy method) {
        this.method = method;
    }

    public void doPayment(int amount) {
        if (method != null) {
            method.pay(amount);
        } else {
            System.out.println("No payment method is being selected.");
        }
    }
}

public class StrategyExample {
    public static void main(String[] args) {
        PaymentContext payNow = new PaymentContext();

        payNow.choseMethod(new CreditCardPayment("1541-2652-3893-4444"));
        payNow.doPayment(1200);

        payNow.choseMethod(new PayPalPayment("abc@mnj.com"));
        payNow.doPayment(900);
    }
}